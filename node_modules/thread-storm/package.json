{
  "name": "thread-storm",
  "version": "0.0.5",
  "description": "Easy multithreading in node",
  "main": "threadStorm.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/charliegarrison/node-thread-storm.git"
  },
  "keywords": [
    "thread",
    "multithreading",
    "multi",
    "threading",
    "node",
    "javascript"
  ],
  "author": {
    "name": "Charlie Garrison"
  },
  "license": "Unlicense",
  "bugs": {
    "url": "https://github.com/charliegarrison/node-thread-storm/issues"
  },
  "homepage": "https://github.com/charliegarrison/node-thread-storm#readme",
  "readme": "# node-thread-storm\nMultithreading in node. node-thread-storm allows you to run code simultaneously using node's cluster funcionality.\n\n\n`npm install thread-storm`\n\nUsing the thread storm library is simple and straight forward. Below is a simple example. First, require the library.\n\n```javascript\nthreadStorm = require('thread-storm')\n```\n\nThe next part might seem a little strange, but you need to return if threadStorm.isMaster flag is false;\n\n```javascript\nif(!threadStorm.isMaster) {\n  return;\n}\n```\n\nStart the library and wait for the background threads to be ready.\n\n```javascript\nthreadStorm.ee.on('ready', function() {\n...do something\n});\n\nthreadStorm.start();\n```\n\nOnce the library is ready you can run tasks on the background threads as easy as\n\n```javascript\nthreadStorm.runTask(\"someFile.js\",{someKey: \"some value\"});\n```\n\nThe first arg is the path and name of a JS files of code u want run.\n\nThe second arg will be passed as the first argument to your function.\n\nThe second arg passed to your function will be the module.exports of a job runner which are methods as follows:\n taskCommunicator (to pass data back to your main code)\n completed (to be called when your background code finished. If you ever want it to finish and free up the thread for other jobs.)\n \n your javascript file might look something like this:\n \n ```javascript\n module.exports = function(sessionData,parent) {\n  setTimeout(function() {\n    parent.completed();\n  },10000);\n};\n```\n\nyou can also listen to the following events from threadStorm.ee\n\nmsg - get a message from the task running\n\ntaskComplete - called when your tasks completes\n\n\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "50791a130569fb0c38d88f4bc42f03b6ed6cac26",
  "_id": "thread-storm@0.0.5",
  "_shasum": "b1db39bae2c91e488dbcd95176444583b7f1471f",
  "_from": "thread-storm@0.0.5"
}
